@model LibaryViewModel
@{
    ViewData["Title"] = "Libary";
}

<style>
    .game-image {
        width: 100%;
        height: 300px;
        background-size: cover;
        background-position: center;
    }

    .friend-info {
        text-align: center;
    }

        .friend-info img {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            border: 3px solid #fff;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease-in-out;
        }

            .friend-info img:hover {
                transform: scale(1.1);
                box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.6);
            }

    .friend-name {
        font-size: 18px;
        margin-top: 10px;
        color: #fff;
    }

    .work-info {
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-right: 10px;
        margin-bottom: 10px;
        width: calc(33.33% - 20px); /* чтобы элементы занимали 1/3 ширины */
    }

        .work-info p {
            margin: 0;
        }

            .work-info p strong {
                font-weight: bold;
            }
</style>
<div class="container">
    <div class="row">
        <div class="col-md-4">
            @if (Model.games is null || !Model.games.Any())
            {
                <p class="text-white">Nothing here..</p>
            }
            else
            {
                <div class="list-group top-0 start-0">
                    @foreach (var item in Model.games)
                    {
                        <li class="list-group-item bg-dark text-white" onclick="showGameDetails1(this)"
                            data-title="@item.Title"
                            data-description="@item.Description"
                            data-price="@item.Price"
                            data-gameimageurl="@item.GameImageUrl"
                            data-background="@item.GamePreviewUrl">
                            <img src="@item.GameImageUrl" alt="Game Image" style="max-height: 100px;max-width: 100px;"> @item.Title
                        </li>
                    }
                </div>
            }
        </div>
        <div class="col-md-8">
            <div id="gameDetails" style="display: none;">
                <div id="gameDetailsContent">
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function showGameDetails1(element) {
        var gameDetailsContent = document.getElementById("gameDetailsContent");

        var game = {
            Title: element.dataset.title,
            Description: element.dataset.description,
            Price: element.dataset.price,
            BackgroundImage: element.dataset.background,
            GameImageUrl: element.dataset.gameimageurl,
        };

        console.log(game.Title);

        var friendsData = @Html.Raw(Json.Serialize(@Model.friends));
        console.log(friendsData);
        console.log(game.Title);

        var friendsWithSameGame = friendsData.filter(function (friend) {
            return friend.games.some(function (game1) {
                console.log('12121' + game1.title)
                return game1.title === game.Title
            });
        });

        console.log(friendsWithSameGame);

        var friendsHtml = '';
        friendsHtml += '<p class="text-white mb-3">Friends that also own this game!</p>';
        friendsHtml += '<div class="d-flex flex-wrap">';
        friendsWithSameGame.forEach(function (friend) {
            friendsHtml += `
                    <div class="friend-info mr-3 mb-3">
                        <img src="${friend.user.avatarUrl}" alt="${friend.user.userName}" class="img-thumbnail">
                        <p class="friend-name">${friend.user.userName}</p>
                    </div>`;
        });
        friendsHtml += '</div>';

        console.log(friendsHtml);

        var worksData = @Html.Raw(Json.Serialize(@Model.works));
        console.log(worksData);

        var worksForGame = worksData.filter(function (work) {
            return work.game.title === game.Title;
        });

        console.log(worksForGame);

        var worksHtml = '';
        worksHtml += '<p class="text-white mb-3">Works for this game:</p>';
        worksHtml += '<div class="row">'; // Используем Bootstrap grid system для создания строк и столбцов

        worksForGame.forEach(function (work) {
            worksHtml += `
                    <div class="col-md-4"> <!-- Используем колонки Bootstrap для распределения карточек по странице -->
                        <div class="card bg-dark text-white mb-3">
                            <div class="card-body">
                                    <img src="${game.GameImageUrl}" alt="Game Image" style="max-height: 100px; max-width: 100px;">
                                    <h5 class="card-title">Title: ${work.title}</h5>
                                    <p class="card-text">Description: ${work.description}</p>
                                <p class="card-text">Creator: ${work.creator}</p>
                            </div>
                        </div>
                    </div>`;
        });

        worksHtml += '</div>'; // Закрываем строку Bootstrap

        console.log(worksHtml);

        var gameInfoHtml = `
                        <div class="game-details" style="position: relative;">
                            <div class="game-image" style="position: relative; background-image: url('${game.BackgroundImage}');">
                                <img src="${game.GameImageUrl}" alt="Game Image" style="max-height: 150px; max-width: 150px; position: absolute; bottom: 0; left: 10px;">
                            </div>
                            <div class="game-info">
                                <h3 class="text-white">${game.Title}</h3>
                                <p class="text-white">${game.Description}</p>
                                <p class="text-white">Price: $${game.Price}</p>
                                ${friendsHtml} <!-- Вставляем HTML с информацией о друзьях -->
                                ${worksHtml} <!-- Вставляем HTML с информацией о работах -->
                            </div>
                        </div>
                    `;

        gameDetailsContent.innerHTML = gameInfoHtml;

        document.getElementById("gameDetails").style.display = "block";
    }
</script>